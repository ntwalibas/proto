/*  This file is part of the Proto programming language
 * 
 *  Copyright (c) 2023- Ntwali Bashige Toussaint
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

#include <cstdio>
#include <string>

#include "common/token_type.h"
#include "common/token.h"
#include "lexer/lexer.h"
#include "utils/lexer.h"

/**
 * Given the lexer, prints all the tokens generated by the lexer.
 *
 * Note: iomanip is a huge pain to use so I've decided to just use plain old C here.
 */
void
printTokens(Lexer& lexer)
{
    std::string::size_type line = 0;
    for (;;) {
        Token token = lexer.lex();

        if (token.line != line) {
            if (line == 0)
                printf("%4zu ", token.line);
            else
                printf("\n%4zu ", token.line);
            line = token.line;
        } else {
            printf("   \u2502 ");
        }

        if (token.type == PROTO_NEWLINE)
            printf("%-20s \u21b5\n", tokenTypeToString(token.type).c_str());
        else if (token.type == PROTO_STRING)
            printf("%-20s [string]\n", tokenTypeToString(token.type).c_str());
        else
            printf("%-20s %.*s\n", tokenTypeToString(token.type).c_str(), static_cast<int>(token.length), &(*token.start));

        if (token.type == PROTO_EOF)
            break;
    }
}
